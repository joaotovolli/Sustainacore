---
- # ====== Application Process: ASK_CHAT =======================
  id: 39915080016471134
  identification: 
    name: ASK_CHAT
    type: NATIVE_PLSQL

  source: 
    location: Local Database
    language: PL/SQL
    pl/sql-code: |
      declare
        l_url   varchar2(4000) := 'https://ai.sustainacore.org/ask2';
        l_body  clob;
        l_resp  clob;
      begin
        -- Build request JSON
        apex_json.initialize_clob_output;
        apex_json.open_object;
        apex_json.write('question',   apex_application.g_x01);
        apex_json.write('top_k',      nvl(apex_application.g_x02,'6'));
        apex_json.write('session_id', nvl(apex_application.g_x03,'apex'));
        apex_json.close_object;
        l_body := apex_json.get_clob_output;
        apex_json.free_output;
      
        -- Headers
        apex_web_service.g_request_headers.delete;
        apex_web_service.set_request_headers(
          p_name_01 => 'Content-Type', p_value_01 => 'application/json' );
      
        -- IMPORTANT: If your DB wallet is NOT configured for Let's Encrypt,
        -- this HTTPS call will fail (e.g., ORA-29024). The widget will still
        -- work (fallback), but fix your wallet when you can.
        l_resp := apex_web_service.make_rest_request(
                    p_url         => l_url,
                    p_http_method => 'POST',
                    p_body        => l_body );
      
        -- Return JSON as-is
        owa_util.mime_header('application/json; charset=utf-8', FALSE);
        htp.p('Cache-Control: no-store');
        owa_util.http_header_close;
        htp.p(nvl(l_resp, '{"type":"error","error":"empty_response"}'));
      
      exception
        when others then
          -- Always return JSON so the JS can parse it, even on failure
          owa_util.mime_header('application/json; charset=utf-8', FALSE);
          owa_util.http_header_close;
          htp.p('{"type":"error","error":'||
                apex_escape.json(sqlerrm)||'}');
      end;

  execution: 
    sequence: 1
    point: Ajax Callback

  subscription: 
    version-number: 45526492028980

- # ====== Application Process: ASK2_PROXY =====================
  id: 43518180041783655
  identification: 
    name: ASK2_PROXY
    type: NATIVE_PLSQL

  source: 
    location: Local Database
    language: PL/SQL
    pl/sql-code: |
      DECLARE
        l_url   VARCHAR2(4000) := 'https://ai.sustainacore.org/ask2';
        l_body  CLOB;
        l_resp  CLOB;
      BEGIN
        -- Build request JSON (use "question" to match curl path)
        apex_json.initialize_clob_output;
        apex_json.open_object;
        apex_json.write('question',   NVL(apex_application.g_x01, ''));
        apex_json.write('top_k',      NVL(TO_NUMBER(apex_application.g_x02), 6));
        apex_json.write('refine',     'off'); -- keep clarifier off unless wanted
        apex_json.write('session_id', NVL(apex_application.g_x03, V('APP_SESSION')));
        apex_json.close_object;
        l_body := apex_json.get_clob_output;
        apex_json.free_output;
      
        -- Headers
        apex_web_service.g_request_headers.delete;
        apex_web_service.set_request_headers(
          p_name_01 => 'Content-Type', p_value_01 => 'application/json',
          p_name_02 => 'Accept',       p_value_02 => 'application/json'
        );
      
        -- POST
        l_resp := apex_web_service.make_rest_request(
                    p_url              => l_url,
                    p_http_method      => 'POST',
                    p_body             => l_body,
                    p_transfer_timeout => 30 );
      
        -- Return JSON as-is
        owa_util.mime_header('application/json; charset=utf-8', FALSE);
        htp.p('Cache-Control: no-store');
        owa_util.http_header_close;
        htp.p(NVL(l_resp, '{"type":"error","error":"empty_response"}'));
      
      EXCEPTION
        WHEN OTHERS THEN
          owa_util.mime_header('application/json; charset=utf-8', FALSE);
          owa_util.http_header_close;
          htp.p('{"type":"error","error":' || apex_escape.json(SQLERRM) || '}');
      END;

  execution: 
    sequence: 1
    point: Ajax Callback

  subscription: 
    version-number: 45527294126653

- # ====== Application Process: SC_ASK =========================
  id: 44891429015243982
  identification: 
    name: SC_ASK
    type: NATIVE_PLSQL

  source: 
    location: Local Database
    language: PL/SQL
    pl/sql-code: |
      declare
        l_url  varchar2(4000);
        l_resp clob;
      begin
        l_url :=
          'http://143.47.244.255:8080/ask2'||
          '?q=' || apex_util.url_encode(nvl(apex_application.g_x01,'')) ||
          '&k=' || nvl(apex_application.g_x02,'5') ||
          '&refine=off';
      
        l_resp := apex_web_service.make_rest_request(
                    p_url              => l_url,
                    p_http_method      => 'GET',
                    p_transfer_timeout => 30 );
      
        owa_util.mime_header('application/json; charset=utf-8', FALSE);
        htp.p('Cache-Control: no-store');
        owa_util.http_header_close;
        htp.p(nvl(l_resp, '{"type":"error","error":"empty_response"}'));
      exception
        when others then
          owa_util.mime_header('application/json; charset=utf-8', FALSE);
          owa_util.http_header_close;
          htp.p('{"type":"error","error":'||apex_escape.json(sqlerrm)||'}');
      end;

  execution: 
    sequence: 1
    point: Ajax Callback

  subscription: 
    version-number: 45381541879538

