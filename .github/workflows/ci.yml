name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  preflight:
    name: Preflight checks
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Verify required secrets
        id: check
        env:
          EVAL_BASE_URL: ${{ secrets.EVAL_BASE_URL }}
        run: |
          set -euo pipefail

          missing=()

          if [ -z "${EVAL_BASE_URL}" ]; then
            missing+=("EVAL_BASE_URL")
          fi

          if [ "${#missing[@]}" -eq 0 ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
            echo "missing_secrets=" >> "$GITHUB_OUTPUT"
            {
              echo "## Preflight Check"
              echo "All required secrets are configured. Persona eval will run."
            } >> "$GITHUB_STEP_SUMMARY"
          else
            echo "should_run=false" >> "$GITHUB_OUTPUT"
            echo "missing_secrets=$(IFS=,; echo "${missing[*]}")" >> "$GITHUB_OUTPUT"

            {
              echo "## Preflight Check"
              echo "The workflow skipped the Persona eval because the following secrets are missing:"
              for secret in "${missing[@]}"; do
                printf -- '- `%s`\n' "$secret"
              done
              echo
              echo "Configure these secrets under **Settings → Secrets and variables → Actions** to enable the eval job."
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Leave configuration guidance
        if: ${{ github.event_name == 'pull_request' && steps.check.outputs.should_run == 'false' }}
        uses: actions/github-script@v7
        with:
          script: |
            const missing = (process.env.MISSING_SECRETS || '')
              .split(',')
              .filter(Boolean)
              .map(name => `- \`${name}\``)
              .join('\n');

            const body = [
              '⚠️ **Persona eval skipped**',
              '',
              'The preflight check skipped the Persona eval because the following required secrets are not set:',
              missing || '- (none reported)',
              '',
              'Add these secrets in **Settings → Secrets and variables → Actions** for the repository or organization to enable the eval job.'
            ].join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
        env:
          MISSING_SECRETS: ${{ steps.check.outputs.missing_secrets }}
  guard-secrets:
    name: Ensure sensitive files are ignored
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verify that sensitive files are not committed
        run: |
          set -euo pipefail
          files=$(git ls-files -- ':**/.env' ':**/wallet/**')
          if [ -n "$files" ]; then
            echo "The following sensitive files are committed:" >&2
            echo "$files" >&2
            exit 1
          fi
          echo "No tracked .env or wallet files detected."
  chat-eval:
    name: Persona eval
    needs:
      - preflight
      - guard-secrets
    if: needs.preflight.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          pip install -r requirements.txt
      - name: Launch API
        run: |
          uvicorn app.retrieval.app:app --host 0.0.0.0 --port 8080 &
          echo $! > uvicorn.pid
          sleep 5
        env:
          PERSONA_V1: "1"
          REQUEST_NORMALIZE: "1"
      - name: Run eval pack
        env:
          PERSONA_V1: "1"
          REQUEST_NORMALIZE: "1"
          EVAL_BASE_URL: ${{ secrets.EVAL_BASE_URL }}
          ASK2_URL: ${{ secrets.EVAL_BASE_URL }}
          EVAL_FLAGS: "REQUEST_NORMALIZE,PERSONA_V1"
        run: python scripts/run_eval.py
      - name: Shutdown API
        if: always()
        run: |
          if [ -f uvicorn.pid ]; then
            kill $(cat uvicorn.pid) || true
          fi
